services:
  postgresql:
    image: postgres:latest
    container_name: postgresql
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: link_tracker
    volumes:
      - ./log-directory:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres -d link_tracker
      interval: 15s
      timeout: 15s
      retries: 5
    restart: always

  liquibase-migrations:
    container_name: migrations
    image: liquibase/liquibase:4.29
    depends_on:
      postgresql:
        condition: service_healthy
    command:
      - --searchPath=/changesets
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/link_tracker
      - --username=postgres
      - --password=123
      - update
    volumes:
      - ./migrations:/changesets

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "nc", "-z", "zookeeper", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka-1
    ports:
      - "19092:19092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_MIN_IN_SYNC_REPLICAS: 2
    healthcheck:
      test: ["CMD", "nc", "-z", "kafka-1", "19092"]
      interval: 20s
      timeout: 10s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka-2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka-2
    ports:
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_MIN_IN_SYNC_REPLICAS: 2
    healthcheck:
      test: ["CMD", "nc", "-z", "kafka-2", "29092"]
      interval: 20s
      timeout: 10s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kui/config.yml:/etc/kafkaui/config.yaml
      - ./kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy

  redis:
    image: "redis:7.4"
    container_name: redis
    ports:
      - '6379:6379'
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 20s
      timeout: 15s
      retries: 5

  bot:
    build:
      context: ./
      dockerfile: bot/Dockerfile
    ports:
      - "8080:8080"
      - "5004:5004"
    volumes:
      - ~/.m2/repository:/root/.m2/repository
      - maven_repo:/root/.m2/repository
    environment:
      APP_TELEGRAM_TOKEN: ${APP_TELEGRAM_TOKEN}
      APP_TELEGRAM_NAME: ${APP_TELEGRAM_NAME}
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5004"
    depends_on:
      redis:
        condition: service_healthy
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-ui:
        condition: service_started

  scrapper:
    build:
      context: ./
      dockerfile: scrapper/Dockerfile
    ports:
      - "8081:8081"
      - "5005:5005"
    volumes:
      - ~/.m2/repository:/root/.m2/repository
      - maven_repo:/root/.m2/repository
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    depends_on:
      postgresql:
        condition: service_healthy
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-ui:
        condition: service_started
      redis:
        condition: service_healthy


volumes:
  db_data: {}
  maven_repo:

