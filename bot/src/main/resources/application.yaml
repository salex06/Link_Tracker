app:
  telegram-token: ${APP_TELEGRAM_TOKEN} # env variable
  telegram-name: ${APP_TELEGRAM_NAME}
  user-events:
    topic: notifications-from-resources
    dlt-topic: notifications-from-resources-dlt
    thread-count: 1
    auto-startup: true
  stability:
      timeout:
        read-timeout: 500
        connect-timeout: 1000
      retry:
        max-attempts: 4
        backoff: 2000
        http-codes:
          - 429 #Too Many Requests
          - 500 #Internal Server Error
          - 502 #Bad Gateway
          - 503 #Service Unavailable
          - 504 #Gateway Timeout
          - 507 #Insufficient Storage

resilience4j.retry:
  instances:
    default:
      maxAttempts: 4
      waitDuration: 500
      retryExceptions:
        backend.academy.exceptions.RetryableHttpServerErrorException
      ignoreExceptions:
        - org.springframework.web.client.HttpServerErrorException

resilience4j:
  circuitbreaker:
    instances:
      default:
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        slidingWindowSize: 10
        failureRateThreshold: 90
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 2
        recordExceptions:
          - org.springframework.web.client.ResourceAccessException

resilience4j.ratelimiter:
  instances:
    default:
      limitForPeriod: 20
      timeout-duration: 0s
      limitRefreshPeriod: 60s

scrapper:
  base-url: "http://localhost:8081"

spring:
  application:
    name: Bot
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  kafka:
    bootstrap-servers: localhost:19092,localhost:29092
    consumer.properties:
      group-id: default-consumer
      enable.auto.commit: false
      auto.offset.reset: earliest
      isolation.level: read_committed
      fetch.min.bytes: 1024
      fetch.max.bytes: 1048576
      fetch.max.wait.ms: 10000
      max.poll.interval.ms: 10000
      max.poll.records: 10
    cloud.zookeeper:
      config.enabled: false
      connect-string: localhost:2181
  redis:
    host: redis
    port: 6379

server:
  port: 8080

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui

logging:
  structured:
    format:
      console: ecs
